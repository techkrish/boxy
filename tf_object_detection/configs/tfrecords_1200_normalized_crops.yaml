# Creating cropped and if needed, scaled tfrecords
#
# This one randomly crops samples out of the image without resizing
# Images are normalized


# The script takes random crops of this size from the original images
# The original images have an input size of 2464x2056 and out of those
# we randomly sample crops of the following size
crop_input_width: 1200
crop_input_height: 1200

# The randomly sampled crops are then resized according to the following specs
# In this example, the crops are not scaled at all.
crop_output_width: 1024
crop_output_height: 1024

# Since the crops are randomly sampled accross the image, we can take multiple crops
# Set this to 1 if your crop_input_width equals 2464x2056 (the raw images). You don't
# want 5 copies of the same image :)
crops_per_image: 1

# Specs for the classification tfrecords. Not used for detection
vehicle_crop_size: 256
min_crop_width: 25  # for classification
min_crop_height: 15

# Only labels larger than the following are used within the detector training
# After cropping and scaling. I.e., you probably only want reasonably sized
# labels  depending on detector and image size. For example, your SSD with 320x320
# input pixels won't detect a one pixel car.
min_width: 25
min_height: 25

# TODO configure paths
train_labels_json: '/data/bluefox_dataset/boxy_labels_train_side.json'
valid_labels_json: '/data/bluefox_dataset/boxy_labels_valid.json'
#test_labels_json: '/data/bluefox_dataset/boxy_labels_test.json'
image_folder : '/data/bluefox_dataset/images_raw'
image_format: 'png'  # png or jpg

tfrecords_folder: '/data/bluefox_dataset/tfrecords_raw_divided_vehicles/'

divided: True
train_tfrecords : 'complete_train_1024_rear_side_debug.tfrecords'
valid_tfrecords : 'complete_valid_1024_rear_side_debug.tfrecords'
test_tfrecords : 'complete_test.tfrecords'
